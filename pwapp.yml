#
# ansible install playbook for pw? servers
#
---
- hosts: pwapp
  become: yes
  handlers:
  - name: Restart nginx
    service:
      name: 'nginx'
      state: 'restarted'
# - name: Restart supervisor
#   service:
#     name: 'supervisor'
#     state: 'restarted'
  tasks:
  - name: install packages 
    apt:
      pkg:
      - tree
      - nmap
      - tldr
      - fish
      - zsh
      - tmux
      - screen
      - debconf-utils
      - python3
      - python3-venv
      - python3-dev
      - python3-pymysql
      - nginx
      - git
      - supervisor
      - mariadb-server
      - ldap-utils
  - name: remove apparmor
    apt:
      pkg: apparmor
      state: absent
      purge: yes
      force: yes
  - name: copy config files
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
      - src: bash_aliases
        dest: .bash_aliases

# clone PasswordService (accept key)
  - name: copy ssh known_hosts file
    copy:
      src: known_hosts
      dest: .ssh/.
  - name: make root ssh dir
    ansible.builtin.file:
      path: /root/.ssh
      state: directory
      mode: '0700'
  - name: copy ssh known_hosts file to roo
    copy:
      src: known_hosts
      dest: /root/.ssh/.
  - name: Git checkout
    become: yes
    become_user: vagrant
    ansible.builtin.git:
      repo: 'git@github.swarthmore.edu:CS-Sysadmins/PasswordService.git'
      dest: /home/vagrant/PasswordService
      accept_newhostkey: true
  - name: copy new config.py file
    copy:
      src: config.py
      dest: config.py
  - name: copy new env file
    copy:
      src: env
      dest: env
# need different server name for each host
  - name: config nginx
    template:
      src: pws.j2
      dest: /etc/nginx/sites-enabled/pws
    notify: 'Restart nginx'
  - name: remove default nginx config
    ansible.builtin.file:
      path: /etc/nginx/sites-enabled/default
      state: absent
    notify: 'Restart nginx'
  - name: config supervisor
    copy:
      src: PasswordService.conf
      dest: /etc/supervisor/conf.d/PasswordService.conf
#   notify: 'Restart supervisor'
  - name: create database
    community.mysql.mysql_db:
      name: PasswordService
      state: present
      encoding: utf8
      collation: utf8_bin
      login_unix_socket: /run/mysqld/mysqld.sock
  - name: Removes all anonymous user accounts
    community.mysql.mysql_user:
      name: ''
      host_all: true
      state: absent
      login_unix_socket: /run/mysqld/mysqld.sock
  - name: Create database user
    community.mysql.mysql_user:
      name: vagrant
      password: dbpassword
      priv: 'PasswordService.*:ALL'
      state: present
      login_unix_socket: /run/mysqld/mysqld.sock

  - name: Create www dir
    ansible.builtin.file:
      path: /var/www/PasswordService
      state: directory
      mode: '0755'
      owner: vagrant
      group: vagrant
  - name: deploy app to new dir
    copy:
      src: deploy.sh
      dest: deploy.sh
      mode: '0755'
  - name: run the deploy script
    ansible.builtin.command: 
      cmd: /home/vagrant/deploy.sh
...








